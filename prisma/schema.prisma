generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = process.env.DATABASE_URL
}


model Task {
  id        String   @id @default(uuid())
  title     String
  completed Boolean  @default(false)
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id       String  @id @default(uuid())
  name     String?
  email    String  @unique
  password String?
  image    String?
  tasks    Task[]  // One-to-many relationship
  accounts Account[]
  sessions Session[]
}


model Session {
  id           String  @id @default(cuid())
  sessionToken String  @unique
  userId       String
  user         User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?  // Optional, for OAuth
  access_token      String?  // Optional, for OAuth
  expires_at        Int?     // Optional, for OAuth
  token_type        String?  // Optional
  scope            String?   // Optional
  id_token          String?  // Optional, for OAuth
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])  // Ensure unique OAuth logins
}
